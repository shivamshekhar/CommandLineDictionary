#!/usr/bin/env node

const L = require('./lib').logger;
const responseLogger = require('./lib').responseLogger;
const DictionaryApi = require('./api').dictionary;
const constants = require('./config').constants;
const logtag = '[dict]';

(async function () {
    let command = process.argv[2];
    let word = process.argv[3];

    try {
        let response = {};

        switch (command) {
            case 'defn':
                response = await DictionaryApi.getWordDefinition(word);
                break;
            case 'syn':
                response = await DictionaryApi.getRelatedWords(word, constants.WORD_RELATIONSHIP_TYPES.SYNONYM);
                break;
            case 'ant':
                response = await DictionaryApi.getRelatedWords(word, constants.WORD_RELATIONSHIP_TYPES.ANTONYM);
                break;
            case 'ex':
                response = await DictionaryApi.getWordExamples(word);
                break;
            case 'play':
                await DictionaryApi.gameplay();
                break;
            case undefined:
                randomWordResponse = await DictionaryApi.getRandomWord();
                word = randomWordResponse && randomWordResponse.word;
                response = await DictionaryApi.getAll(word);
                break;
            default:
                word = command;
                response = await DictionaryApi.getAll(word);
                break;

        }

        responseLogger(command, response);

        process.exit(0);
    } catch (err) {
        L.error(`${logtag} : Error occurred :`, (err && err.message) || err);
        process.exit(1);
    }
}())